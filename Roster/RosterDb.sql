CREATE TABLE "ClassRooms" ("ClassRoomID" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "SchoolID" INTEGER NOT NULL , "RoomNumber" INTEGER NOT NULL , "MaxStudents" INTEGER, "Notes" VARCHAR, "CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, "ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE "Classes" ("ClassID" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "CourseID" INTEGER NOT NULL , "InstructorID" INTEGER NOT NULL , "ClassRoomID" INTEGER NOT NULL , "SessionID" INTEGER NOT NULL , "PeriodID" INTEGER NOT NULL , "CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, "ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE "Contacts" ("ContactID" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "Address1" VARCHAR, "Address2" VARCHAR, "City" VARCHAR, "State" VARCHAR, "Zip" VARCHAR, "Phone" VARCHAR, "Mobile" VARCHAR, "Email" VARCHAR, "CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, "ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE "Course" ("CourseID" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ,"Title" VARCHAR NOT NULL ,"Description" VARCHAR,"CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP ,"ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP );
CREATE TABLE "Enrollments" ("StudentID" INTEGER NOT NULL , "ClassID" INTEGER NOT NULL , "FeesPaid" FLOAT, "Tag" VARCHAR, "Grade" FLOAT, "CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, "ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("StudentID", "ClassID"));
CREATE TABLE "EnrollmentTags" ("Tag" VARCHAR NOT NULL, "CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, "ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("Tag"));
CREATE TABLE "Instructors" ("InstructorID" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "FirstName" VARCHAR NOT NULL , "LastName" VARCHAR NOT NULL , "ContactID" INTEGER, "CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, "ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE "Periods" ("PeriodID" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "Name" VARCHAR NOT NULL , "StartTime" DATETIME NOT NULL , "EndTime" DATETIME NOT NULL , "CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, "ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE "Schools" ("SchoolID" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "Name" VARCHAR NOT NULL , "ContactID" INTEGER, "CreateDate" DATETIME NOT NULL  DEFAULT 'CURRENT_TIMESTAMP()', "ChangeDate" DATETIME NOT NULL  DEFAULT 'CURRENT_TIMESTAMP()');
CREATE TABLE "Sessions" ("SessionID" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "Name" VARCHAR NOT NULL , "StartDate" DATETIME NOT NULL , "EndDate" DATETIME NOT NULL , "CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, "ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE "Students" ("StudentID" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "FirstName" VARCHAR NOT NULL , "LastName" VARCHAR NOT NULL , "ContactID" INTEGER, "SchoolID" INTEGER, "CreateDate" DATETIME NOT NULL  DEFAULT 'CURRENT_TIMESTAMP()', "ChangeDate" DATETIME NOT NULL  DEFAULT 'CURRENT_TIMESTAMP()');
CREATE TABLE "Version" ("Version" INTEGER PRIMARY KEY, "CreateDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP, "ChangeDate" DATETIME NOT NULL  DEFAULT CURRENT_TIMESTAMP); 
CREATE TRIGGER "TR_Classes" AFTER UPDATE ON Classes FOR EACH ROW  BEGIN UPDATE Classes SET ChangeDate = DATETIME() WHERE ClassID = old.ClassID; END;
CREATE TRIGGER "TR_Classrooms" AFTER UPDATE ON ClassRooms FOR EACH ROW  BEGIN UPDATE ClassRooms SET ChangeDate = DATETIME() WHERE ClassRoomID = old.ClassRoomID; END;
CREATE TRIGGER "TR_Contacts" AFTER UPDATE ON Contacts FOR EACH ROW  BEGIN UPDATE Contacts SET ChangeDate = DATETIME() WHERE ContactID = old.ContactID; END;
CREATE TRIGGER "TR_Course" AFTER UPDATE ON Course FOR EACH ROW  BEGIN UPDATE Course SET ChangeDate = DATETIME() WHERE CourseID = old.CourseID; END;
CREATE TRIGGER "TR_Enrollments" AFTER UPDATE ON Enrollments FOR EACH ROW  BEGIN UPDATE Enrollments SET ChangeDate = DATETIME() WHERE StudentID = old.StudentID AND ClassID = old.ClassID; END;
CREATE TRIGGER "TR_EnrollmentTags" AFTER UPDATE ON EnrollmentTags FOR EACH ROW  BEGIN UPDATE EnrollmentTags SET ChangeDate = DATETIME() WHERE Tag = old.Tag; END;
CREATE TRIGGER "TR_Version" AFTER UPDATE ON Version FOR EACH ROW  BEGIN UPDATE Version SET ChangeDate = DATETIME() WHERE Version = old.Version; END;
CREATE TRIGGER "TR_Instructors" AFTER UPDATE ON Instructors FOR EACH ROW  BEGIN UPDATE Instructors SET ChangeDate = DATETIME() WHERE InstructorID = old.InstructorID; END;
CREATE TRIGGER "TR_Periods" AFTER UPDATE ON Periods FOR EACH ROW  BEGIN UPDATE Periods SET ChangeDate = DATETIME() WHERE PeriodID = old.PeriodID; END;
CREATE TRIGGER "TR_Schools" AFTER UPDATE ON Schools FOR EACH ROW  BEGIN UPDATE Schools SET ChangeDate = DATETIME() WHERE SchoolID = old.SchoolID; END;
CREATE TRIGGER "TR_Sessions" AFTER UPDATE ON Sessions FOR EACH ROW  BEGIN UPDATE Sessions SET ChangeDate = DATETIME() WHERE SessionID = old.SessionID; END;
CREATE TRIGGER "TR_Students" AFTER UPDATE ON Students FOR EACH ROW  BEGIN UPDATE Students SET ChangeDate = DATETIME() WHERE StudentID = old.StudentID; END;
INSERT INTO Version ("Version") VALUES (2);